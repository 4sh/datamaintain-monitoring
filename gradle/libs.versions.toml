[versions]
java = "17"
kotlin = "2.0.20"
ktor = "2.3.12"
grpc-kotlin = "1.4.1"
grpc = "1.68.0"
protobuf = "4.28.0"
logback = "1.4.7"
jooq = "3.19.11"
postgresql = "42.5.1"
testcontainers = "1.20.2"
junit = "5.11.0"
junit-platform-launcher = "1.7.0"
strikt = "0.34.1"
jakarta = "3.0.2"
mockk = "1.13.14"
logging = "1.8.0.1"

# Plugins
gradle-protobuf = "0.9.4"
gradle-palantir-git = "3.1.0"

[plugins]
protobuf = { id = "com.google.protobuf", version.ref = "gradle-protobuf"}
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jooq = { id = "org.jooq.jooq-codegen-gradle", version.ref = "jooq" }
palantir-git = { id = "com.palantir.git-version", version.ref = "gradle-palantir-git" }

[libraries]
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor"}
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor"}
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }

grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-netty = { module = "io.grpc:grpc-netty", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-protoc-java = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc" }
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpc-kotlin" }
grpc-protoc-kotlin = { module = "io.grpc:protoc-gen-grpc-kotlin", version.ref = "grpc-kotlin" }
protobuf-protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf"}
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf"}
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf"}

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback"}
logging = { module = "io.github.microutils:kotlin-logging", version.ref = "logging"}

jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform-launcher" }

testcontainers-testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers"}
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers"}
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers"}

strikt-core = { module = "io.strikt:strikt-core", version.ref = "strikt" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk"}
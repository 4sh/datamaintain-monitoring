/*
 * This file is generated by jOOQ.
 */
package generated.domain.tables.records


import generated.domain.tables.DmFlag

import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DmFlagRecord() : UpdatableRecordImpl<DmFlagRecord>(DmFlag.DM_FLAG) {

    @get:NotNull
    @get:Size(max = 255)
    open var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised DmFlagRecord
     */
    constructor(name: String? = null): this() {
        this.name = name
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised DmFlagRecord
     */
    constructor(value: generated.domain.tables.pojos.DmFlag?): this() {
        if (value != null) {
            this.name = value.name
            resetChangedOnNotNull()
        }
    }
}

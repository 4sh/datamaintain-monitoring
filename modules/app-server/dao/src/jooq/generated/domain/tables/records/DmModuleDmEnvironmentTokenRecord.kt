/*
 * This file is generated by jOOQ.
 */
package generated.domain.tables.records


import generated.domain.tables.DmModuleDmEnvironmentToken

import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DmModuleDmEnvironmentTokenRecord() : UpdatableRecordImpl<DmModuleDmEnvironmentTokenRecord>(DmModuleDmEnvironmentToken.DM_MODULE_DM_ENVIRONMENT_TOKEN) {

    open var fkModuleRef: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var fkEnvironmentRef: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var tokenValue: UUID?
        set(value): Unit = set(2, value)
        get(): UUID? = get(2) as UUID?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised DmModuleDmEnvironmentTokenRecord
     */
    constructor(fkModuleRef: UUID? = null, fkEnvironmentRef: UUID? = null, tokenValue: UUID? = null): this() {
        this.fkModuleRef = fkModuleRef
        this.fkEnvironmentRef = fkEnvironmentRef
        this.tokenValue = tokenValue
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised DmModuleDmEnvironmentTokenRecord
     */
    constructor(value: generated.domain.tables.pojos.DmModuleDmEnvironmentToken?): this() {
        if (value != null) {
            this.fkModuleRef = value.fkModuleRef
            this.fkEnvironmentRef = value.fkEnvironmentRef
            this.tokenValue = value.tokenValue
            resetChangedOnNotNull()
        }
    }
}

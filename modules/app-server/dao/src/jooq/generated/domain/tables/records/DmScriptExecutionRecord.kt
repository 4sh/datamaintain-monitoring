/*
 * This file is generated by jOOQ.
 */
package generated.domain.tables.records


import generated.domain.enums.ExecutionStatus
import generated.domain.tables.DmScriptExecution

import jakarta.validation.constraints.Size

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DmScriptExecutionRecord() : UpdatableRecordImpl<DmScriptExecutionRecord>(DmScriptExecution.DM_SCRIPT_EXECUTION), Record8<UUID?, OffsetDateTime?, OffsetDateTime?, Int?, String?, ExecutionStatus?, String?, UUID?> {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var startDate: OffsetDateTime?
        set(value): Unit = set(1, value)
        get(): OffsetDateTime? = get(1) as OffsetDateTime?

    open var endDate: OffsetDateTime?
        set(value): Unit = set(2, value)
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    open var durationInMs: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var output: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var status: ExecutionStatus?
        set(value): Unit = set(5, value)
        get(): ExecutionStatus? = get(5) as ExecutionStatus?

    @get:Size(max = 255)
    open var fkScriptRef: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var fkBatchExecutionRef: UUID?
        set(value): Unit = set(7, value)
        get(): UUID? = get(7) as UUID?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    public override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    public override fun fieldsRow(): Row8<UUID?, OffsetDateTime?, OffsetDateTime?, Int?, String?, ExecutionStatus?, String?, UUID?> = super.fieldsRow() as Row8<UUID?, OffsetDateTime?, OffsetDateTime?, Int?, String?, ExecutionStatus?, String?, UUID?>
    public override fun valuesRow(): Row8<UUID?, OffsetDateTime?, OffsetDateTime?, Int?, String?, ExecutionStatus?, String?, UUID?> = super.valuesRow() as Row8<UUID?, OffsetDateTime?, OffsetDateTime?, Int?, String?, ExecutionStatus?, String?, UUID?>
    public override fun field1(): Field<UUID?> = DmScriptExecution.DM_SCRIPT_EXECUTION.ID
    public override fun field2(): Field<OffsetDateTime?> = DmScriptExecution.DM_SCRIPT_EXECUTION.START_DATE
    public override fun field3(): Field<OffsetDateTime?> = DmScriptExecution.DM_SCRIPT_EXECUTION.END_DATE
    public override fun field4(): Field<Int?> = DmScriptExecution.DM_SCRIPT_EXECUTION.DURATION_IN_MS
    public override fun field5(): Field<String?> = DmScriptExecution.DM_SCRIPT_EXECUTION.OUTPUT
    public override fun field6(): Field<ExecutionStatus?> = DmScriptExecution.DM_SCRIPT_EXECUTION.STATUS
    public override fun field7(): Field<String?> = DmScriptExecution.DM_SCRIPT_EXECUTION.FK_SCRIPT_REF
    public override fun field8(): Field<UUID?> = DmScriptExecution.DM_SCRIPT_EXECUTION.FK_BATCH_EXECUTION_REF
    public override fun component1(): UUID? = id
    public override fun component2(): OffsetDateTime? = startDate
    public override fun component3(): OffsetDateTime? = endDate
    public override fun component4(): Int? = durationInMs
    public override fun component5(): String? = output
    public override fun component6(): ExecutionStatus? = status
    public override fun component7(): String? = fkScriptRef
    public override fun component8(): UUID? = fkBatchExecutionRef
    public override fun value1(): UUID? = id
    public override fun value2(): OffsetDateTime? = startDate
    public override fun value3(): OffsetDateTime? = endDate
    public override fun value4(): Int? = durationInMs
    public override fun value5(): String? = output
    public override fun value6(): ExecutionStatus? = status
    public override fun value7(): String? = fkScriptRef
    public override fun value8(): UUID? = fkBatchExecutionRef

    public override fun value1(value: UUID?): DmScriptExecutionRecord {
        set(0, value)
        return this
    }

    public override fun value2(value: OffsetDateTime?): DmScriptExecutionRecord {
        set(1, value)
        return this
    }

    public override fun value3(value: OffsetDateTime?): DmScriptExecutionRecord {
        set(2, value)
        return this
    }

    public override fun value4(value: Int?): DmScriptExecutionRecord {
        set(3, value)
        return this
    }

    public override fun value5(value: String?): DmScriptExecutionRecord {
        set(4, value)
        return this
    }

    public override fun value6(value: ExecutionStatus?): DmScriptExecutionRecord {
        set(5, value)
        return this
    }

    public override fun value7(value: String?): DmScriptExecutionRecord {
        set(6, value)
        return this
    }

    public override fun value8(value: UUID?): DmScriptExecutionRecord {
        set(7, value)
        return this
    }

    public override fun values(value1: UUID?, value2: OffsetDateTime?, value3: OffsetDateTime?, value4: Int?, value5: String?, value6: ExecutionStatus?, value7: String?, value8: UUID?): DmScriptExecutionRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised DmScriptExecutionRecord
     */
    constructor(id: UUID? = null, startDate: OffsetDateTime? = null, endDate: OffsetDateTime? = null, durationInMs: Int? = null, output: String? = null, status: ExecutionStatus? = null, fkScriptRef: String? = null, fkBatchExecutionRef: UUID? = null): this() {
        this.id = id
        this.startDate = startDate
        this.endDate = endDate
        this.durationInMs = durationInMs
        this.output = output
        this.status = status
        this.fkScriptRef = fkScriptRef
        this.fkBatchExecutionRef = fkBatchExecutionRef
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised DmScriptExecutionRecord
     */
    constructor(value: generated.domain.tables.pojos.DmScriptExecution?): this() {
        if (value != null) {
            this.id = value.id
            this.startDate = value.startDate
            this.endDate = value.endDate
            this.durationInMs = value.durationInMs
            this.output = value.output
            this.status = value.status
            this.fkScriptRef = value.fkScriptRef
            this.fkBatchExecutionRef = value.fkBatchExecutionRef
            resetChangedOnNotNull()
        }
    }
}

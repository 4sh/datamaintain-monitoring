/*
 * This file is generated by jOOQ.
 */
package dao.jooq.generated.domain.tables.records


import dao.jooq.generated.domain.enums.ExecutionStatus
import dao.jooq.generated.domain.tables.DmScriptExecution

import jakarta.validation.constraints.Size

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DmScriptExecutionRecord() : UpdatableRecordImpl<DmScriptExecutionRecord>(DmScriptExecution.DM_SCRIPT_EXECUTION) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var startDate: OffsetDateTime?
        set(value): Unit = set(1, value)
        get(): OffsetDateTime? = get(1) as OffsetDateTime?

    open var endDate: OffsetDateTime?
        set(value): Unit = set(2, value)
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    open var durationInMs: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var executionOrderIndex: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var output: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var status: ExecutionStatus?
        set(value): Unit = set(6, value)
        get(): ExecutionStatus? = get(6) as ExecutionStatus?

    @get:Size(max = 255)
    open var fkScriptRef: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var fkBatchExecutionRef: UUID?
        set(value): Unit = set(8, value)
        get(): UUID? = get(8) as UUID?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised DmScriptExecutionRecord
     */
    constructor(id: UUID? = null, startDate: OffsetDateTime? = null, endDate: OffsetDateTime? = null, durationInMs: Int? = null, executionOrderIndex: Int? = null, output: String? = null, status: ExecutionStatus? = null, fkScriptRef: String? = null, fkBatchExecutionRef: UUID? = null): this() {
        this.id = id
        this.startDate = startDate
        this.endDate = endDate
        this.durationInMs = durationInMs
        this.executionOrderIndex = executionOrderIndex
        this.output = output
        this.status = status
        this.fkScriptRef = fkScriptRef
        this.fkBatchExecutionRef = fkBatchExecutionRef
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised DmScriptExecutionRecord
     */
    constructor(value: dao.jooq.generated.domain.tables.pojos.DmScriptExecution?): this() {
        if (value != null) {
            this.id = value.id
            this.startDate = value.startDate
            this.endDate = value.endDate
            this.durationInMs = value.durationInMs
            this.executionOrderIndex = value.executionOrderIndex
            this.output = value.output
            this.status = value.status
            this.fkScriptRef = value.fkScriptRef
            this.fkBatchExecutionRef = value.fkBatchExecutionRef
            resetChangedOnNotNull()
        }
    }
}
